drop table if exists "user" cascade;
drop table if exists judgment_result cascade;
drop table if exists review cascade;
drop table if exists solved_problem cascade;
drop table if exists solved_problem_tag cascade;

create table "user" (
                        created_at timestamp(6),
                        id bigint generated by default as identity,
                        email varchar(255),
                        name varchar(255),
                        oauth_id varchar(255),
                        oauth_provider varchar(255),
                        picture varchar(255),
                        primary key (id)
);

create table judgment_result (
                                 code_length integer not null,
                                 memory integer not null,
                                 problem_id integer not null,
                                 time integer not null,
                                 id bigint generated by default as identity,
                                 solved_problem_id bigint,
                                 submission_id bigint,
                                 submitted_at timestamp(6),
                                 "user_id" bigint,
                                 baekjoon_id varchar(255),
                                 language varchar(255),
                                 result_text varchar(255),
                                 primary key (id)
);

create table review (
                        difficulty_level integer not null,
                        importance_level integer not null,
                        reviewed boolean not null,
                        id bigint generated by default as identity,
                        reviewed_at timestamp(6),
                        "user_id" bigint,
                        primary key (id)
);

create table solved_problem (
                                favorited boolean not null,
                                problem_number integer not null,
                                id bigint generated by default as identity,
                                recent_submit_at timestamp(6),
                                review_id bigint unique,
                                "user_id" bigint,
                                problem_title varchar(255),
                                recent_result_text varchar(255),
                                primary key (id)
);

create table solved_problem_tag (
                                    tag_id integer not null,
                                    solved_problem_id bigint not null,
                                    primary key (tag_id, solved_problem_id)
);


alter table if exists judgment_result
    add constraint FKgwaswwu8a1irymus26vjv7ib9
    foreign key (solved_problem_id)
    references solved_problem;

alter table if exists judgment_result
    add constraint FK3vaq7febrg3jth2ba7pr5hv97
    foreign key ("user_id")
    references "user";

alter table if exists review
    add constraint FKdaoj96idm5vlb3qcon1sfn8c4
    foreign key ("user_id")
    references "user";

alter table if exists solved_problem
    add constraint FKeefyva7mn171yi6e2a1kji50q
    foreign key (review_id)
    references review;

alter table if exists solved_problem
    add constraint FKa1sx02g9810di1gla15a2gaa9
    foreign key ("user_id")
    references "user";

alter table if exists solved_problem_tag
    add constraint FKlutk8jar94t7w5ywecxc0v0nd
    foreign key (solved_problem_id)
    references solved_problem;